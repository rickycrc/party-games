@model GamePlayModel

@{
    Layout = "~/Views/Mc/_Master.cshtml";
    Html.AddTitleParts(Model.Game.Caption);
}

<div class="main">
    <div class="main__title">
        <a href="@Url.Action("Index", "Home")" class="title-icon home"></a>
        <a href="#" class="title-icon play-sound"></a>
        @Model.Game.Caption
    </div>
    <div class="main__summary">Playing 1 / 10 Marks: 10</div>
    <div class="main__inner">
        <div class="panel-retry">
            <a class="panel-retry__link" href="javascript:window.location.reload(true);">
                <i class="fas fa-undo-alt fa-5x"></i>
                <span class="panel-retry__text">REPLAY</span>
            </a>
        </div>
        <div class="panel-start">
            <a href="#" class="panel-start__levels easy" data-level="easy">easy</a>
            <a href="#" class="panel-start__levels medium" data-level="medium">medium</a>
            <a href="#" class="panel-start__levels hard" data-level="hard">hard</a>
        </div>
        <div class="panel-play">
        </div>

    </div>
</div>

<script type="text/javascript">

    $("body").css("background-image", "url('/upload/mc_bg/@(Model.Game.ApiType).jpg')");

    var animationEndEvent = "webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend";
    var $btnPlaySound = $(".main__title .play-sound");
    var audioPlaying = false;

    $btnPlaySound
        .on("change", function (e, $quizEle) {

            var $this = $(this);

            if (!$quizEle)
                return;

            if ($quizEle.data("audio")) {
                $this.data("audio", $quizEle.data("audio")).show();
            }
            else {
                $this.removeData("audio").hide();
            }
        })
        .on("click", function (e, callback) {

            e.preventDefault();
            var $this = $(this);

            if (audioPlaying === true)
                return;

            audioPlaying = true;

            $this.addClass("animated swing").one(animationEndEvent, function () {
                $this.removeClass("animated swing");
            });

            var soundPlayer = new Audio($this.data("audio"));
            $(soundPlayer).on("ended", function () {
                audioPlaying = false;
                if ($.isFunction(callback))
                    callback();
            });

            soundPlayer.play();
        });

    $(".panel-start__levels").on("click", function (e) {
        e.preventDefault();

        if ($(".panel-start").hasClass("loading"))
            return;

        $(".panel-start").addClass("loading");

        var level = $(this).data("level");

        var response = $.ajax({
            url: "@Url.Action("GetQuestions")",
            type: "POST",
            data: {
                type: "GET-@Model.Game.ApiType",
                level: level
            }
        });

        response.done(function (data) {

            $(".panel-start").hide();
            $(".panel-play").show().html(data);

            setTimeout(function () {
                var $quiz = $(".quiz:eq(0)");

                $btnPlaySound.trigger("change", [$quiz]);
                $quiz.fadeIn();

            }, 500);


        });

        response.always(function () {
            $(".panel-start").removeClass("loading");
        });
    });

    $(".panel-play")
        .on("click", ".quiz__image", function (e) {
            //$(this).parent().find(".quiz__playsound").trigger("click");
            $btnPlaySound.trigger("click");
        })
        .on("click", ".quiz__option", function (e) {
            e.preventDefault();
            var $this = $(this);

            if (audioPlaying === true)
                return;
            
            if ($this.data("correct") === true) {

                var $thisQuiz = $this.closest(".quiz");
                var $nextQuiz = $thisQuiz.next();

                //show next quiz function
                var showNextQuiz = function () {
                    $thisQuiz.fadeOut(500, function () {
                        $nextQuiz.fadeIn(1000);
                    });

                    //hide/show volumn
                    $btnPlaySound.trigger("change", [$nextQuiz]);

                    if ($nextQuiz.length === 0) {
                        $(".panel-retry").show();
                        $(".panel-play").hide();
                    }
                }

                //play audio if exists
                if ($thisQuiz.data("audio")) {
                    $btnPlaySound.trigger("click", [showNextQuiz]);
                }
                else {
                    //or directly show next quiz
                    showNextQuiz();
                }

            }
            else {

                var audioEnd = false;
                var shakeEnd = false;

                //only remove class playing when audio and shake event ended
                var onAllEffectEnd = function () {
                    if (audioEnd === true && shakeEnd === true) {
                        audioPlaying = false;
                    }
                }

                var hasAudio = $this.data("audio");

                //play audio
                if (hasAudio) {
                    audioPlaying = true;
                    var soundPlayer = new Audio($this.data("audio"));
                    $(soundPlayer).on("ended", function () {
                        audioEnd = true;
                        onAllEffectEnd();
                    });
                    soundPlayer.play();
                }
                else {
                    audioEnd = true;
                }

                //shake
                $this.addClass("animated shake").one(animationEndEvent, function () {
                    $this.removeClass("animated shake");
                    shakeEnd = true;
                    onAllEffectEnd();
                });
            }
        });

</script>
